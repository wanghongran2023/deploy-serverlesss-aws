service: serverless-todo-app

plugins:
  - serverless-iam-roles-per-function

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    TODO_TABLE: Todos-wang
    TODO_INDEX: Todo_index_wang
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 
            - dynamodb:Scan
          Resource: arn:aws:dynamodb:us-east-1:765848051216:table/${self:provider.environment.TODO_TABLE} 

functions:

  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler

  # TODO: Configure this function
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          path: todos

  # TODO: Configure this function
  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    events:
      - http:
          method: post
          path: todos

  # TODO: Configure this function
  UpdateTodo:
    handler: src/lambda/http/updateTodo.handler
    events:
      - http:
          method: patch
          path: todos/{todoId}

  # TODO: Configure this function
  DeleteTodo:
    handler: src/lambda/http/deleteTodo.handler
    events:
      - http:
          method: delete
          path: todos/{todoId}

  # TODO: Configure this function
  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    events:
      - http:
          method: post
          path: todos/{todoId}/attachment

resources:
  Resources:
    ToDoDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: todoId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: attachmentUrl
            AttributeType: S
          - AttributeName: dueDate
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: name
            AttributeType: S
          - AttributeName: done
            AttributeType: BOOL
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: todoId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.TODO_TABLE}
        LocalSecondaryIndexes:
          - IndexName: ${self:provider.environment.TODO_INDEX}
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
                ProjectionType: ALL
